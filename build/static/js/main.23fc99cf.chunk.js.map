{"version":3,"sources":["redux/actions/todoActions.js","Item.js","theme.js","App.js","redux/reducers/todoReducers.js","redux/store.js","index.js"],"names":["workComplete","id","dispatch","getState","type","payload","localStorage","setItem","JSON","stringify","all","active","completed","Item","theme","item","work","useDispatch","Container","className","onClick","src","alt","removeWork","styled","div","todolistBackground","border","textColor","textCutColor","lightTheme","bodyBackgroundColor","backgroundImage","icon","smallImage","darkTheme","App","useSelector","state","useState","getItem","parse","setTheme","setWork","list","setList","useEffect","Background","Main","changeTheme","value","onChange","e","target","Math","random","toString","substr","map","length","reducer","action","x","filter","allFromStorage","activeFromStorage","completedFromStorage","middleware","thunk","initialState","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23fc99cf.chunk.js","sourcesContent":["export const addWork = (value) => (dispatch, getState) => {\n  // console.log(getState());\n  dispatch({\n    type: \"ADD_WORK\",\n    payload: {\n      id: \"_\" + Math.random().toString(36).substr(2, 9),\n      work: value,\n      completed: false,\n    },\n  });\n\n  localStorage.setItem(\"all\", JSON.stringify(getState().all));\n  localStorage.setItem(\"active\", JSON.stringify(getState().active));\n  localStorage.setItem(\"completed\", JSON.stringify(getState().completed));\n};\n\nexport const workComplete = (id) => (dispatch, getState) => {\n  dispatch({\n    type: \"WORK_COMPLETE\",\n    payload: id,\n  });\n\n  localStorage.setItem(\"all\", JSON.stringify(getState().all));\n  localStorage.setItem(\"active\", JSON.stringify(getState().active));\n  localStorage.setItem(\"completed\", JSON.stringify(getState().completed));\n};\n\nexport const clearCompleted = () => (dispatch, getState) => {\n  dispatch({\n    type: \"CLEAR_COMPLETED\",\n  });\n\n  localStorage.setItem(\"all\", JSON.stringify(getState().all));\n  localStorage.setItem(\"active\", JSON.stringify(getState().active));\n  localStorage.setItem(\"completed\", JSON.stringify(getState().completed));\n};\n\nexport const removeWork = (id) => (dispatch, getState) => {\n  dispatch({\n    type: \"REMOVE_WORK\",\n    payload: id,\n  });\n\n  localStorage.setItem(\"all\", JSON.stringify(getState().all));\n  localStorage.setItem(\"active\", JSON.stringify(getState().active));\n  localStorage.setItem(\"completed\", JSON.stringify(getState().completed));\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components/macro\";\nimport { removeWork, workComplete } from \"./redux/actions/todoActions\";\n\nfunction Item({ theme, item }) {\n  const { id, work, completed } = item;\n  const dispatch = useDispatch();\n  return (\n    <Container theme={theme} key={id}>\n      {completed ? (\n        <>\n          <div className=\"color\" onClick={() => dispatch(workComplete(id))}>\n            <img src=\"/images/icon-check.svg\" alt=\"tick\" />\n          </div>\n          <span>\n            <del>{work} </del>\n          </span>\n        </>\n      ) : (\n        <>\n          <div onClick={() => dispatch(workComplete(id))}></div>\n          <span>{work}</span>\n        </>\n      )}\n\n      <img\n        src=\"/images/icon-cross.svg\"\n        alt=\"cross\"\n        className=\"cross\"\n        onClick={() => dispatch(removeWork(id))}\n      />\n    </Container>\n  );\n}\n\nexport default Item;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 10px;\n  width: 100%;\n  min-height: 50px;\n  background-color: ${({ theme }) => theme.todolistBackground};\n  border-bottom: ${({ theme }) => theme.border};\n\n  :hover {\n    img.cross {\n      visibility: visible;\n      cursor: pointer;\n    }\n\n    div {\n      border: 1px solid blue;\n    }\n  }\n\n  div {\n    height: 25px;\n    width: 25px;\n    border-radius: 50%;\n    border: ${({ theme }) => theme.border};\n    cursor: pointer;\n  }\n\n  div.color {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: radial-gradient(\n      circle,\n      rgba(238, 174, 202, 1) 0%,\n      rgba(148, 187, 233, 1) 100%\n    );\n  }\n\n  img.cross {\n    visibility: hidden;\n\n    @media (max-width: 786px) {\n      visibility: visible;\n    }\n  }\n\n  span {\n    flex: 0.9;\n    text-align: left;\n    font-size: 1.6rem;\n    color: ${({ theme }) => theme.textColor};\n    line-height: 1.2;\n    overflow-x: scroll;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    del {\n      color: ${({ theme }) => theme.textCutColor};\n    }\n  }\n`;\n","export const lightTheme = {\n  bodyBackgroundColor: \" hsl(236, 33%, 92%);\",\n  todolistBackground: \"hsl(0, 0%, 98%)\",\n  border: \"1px solid hsl(233, 11%, 84%)\",\n  textColor: \"hsl(235,19%,35%)\",\n  textCutColor: \"hsl(236, 9%, 61%)\",\n  backgroundImage: \"/images/bg-desktop-light.jpg\",\n  icon: \"/images/icon-moon.svg\",\n  smallImage: \"/images/bg-mobile-light.jpg\",\n};\n\nexport const darkTheme = {\n  bodyBackgroundColor: \"hsl(235, 21%, 11%)\",\n  todolistBackground: \"hsl(235, 24%, 19%)\",\n  border: \"1px solid hsl(233, 14%, 35%)\",\n  textColor: \"hsl(236, 33%, 92%)\",\n  textCutColor: \"hsl(234, 11%, 52%)\",\n  backgroundImage: \"/images/bg-desktop-dark.jpg\",\n  icon: \"/images/icon-sun.svg\",\n  smallImage: \"/images/bg-mobile-dark.jpg\",\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport Item from \"./Item\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addWork, clearCompleted } from \"./redux/actions/todoActions\";\n\nfunction App() {\n  const { all, active, completed } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const [theme, setTheme] = useState(\n    localStorage.getItem(\"theme\")\n      ? JSON.parse(localStorage.getItem(\"theme\"))\n      : lightTheme\n  );\n\n  const [work, setWork] = useState(\"\");\n  const [list, setList] = useState(all);\n\n  useEffect(() => {\n    setList(all);\n  }, [all]);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", JSON.stringify(theme));\n  }, [theme]);\n\n  const changeTheme = (theme) => {\n    theme === lightTheme ? setTheme(darkTheme) : setTheme(lightTheme);\n  };\n\n  return (\n    <Container>\n      <Background theme={theme}>\n        <img src={theme.backgroundImage} alt=\"img\" />\n        <div></div>\n      </Background>\n      <Main theme={theme}>\n        <div className=\"heading\">\n          <h1>TODO</h1>\n          <img src={theme.icon} alt=\"icon\" onClick={() => changeTheme(theme)} />\n        </div>\n        <div className=\"input\">\n          {/* <div></div> */}\n          <input\n            type=\"text\"\n            value={work}\n            onChange={(e) => {\n              setWork(e.target.value);\n            }}\n          />\n          <img\n            src=\"/images/thumb.svg\"\n            alt=\"thumb\"\n            onClick={() => {\n              dispatch(addWork(work));\n              setWork(\"\");\n            }}\n          />\n        </div>\n        <div className=\"main\">\n          <div className=\"items\">\n            {list.map((item) => (\n              <Item theme={theme} item={item} />\n            ))}\n          </div>\n          <div className=\"footer\">\n            <span>\n              {active.length}\n              {list.length <= 1 ? ` item left` : ` items left`}\n            </span>\n            <div className=\"tags\">\n              <span\n                className={list === all && \"activeTag\"}\n                onClick={() => setList(all)}\n              >\n                All\n              </span>\n              <span\n                className={list === active && \"activeTag\"}\n                onClick={() => setList(active)}\n              >\n                Active\n              </span>\n              <span\n                className={list === completed && \"activeTag\"}\n                onClick={() => setList(completed)}\n              >\n                Completed\n              </span>\n            </div>\n            <span onClick={() => dispatch(clearCompleted())}>\n              Clear Completed\n            </span>\n          </div>\n        </div>\n      </Main>\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Background = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: -1;\n\n  img {\n    width: 100%;\n    flex: 0.4;\n  }\n\n  div {\n    flex: 0.6;\n    width: 100vw;\n    background-color: ${({ theme }) => theme.bodyBackgroundColor};\n  }\n`;\n\nconst Main = styled.div`\n  height: 100vh;\n  width: clamp(500px, 45vw, 800px);\n  /* border: 1px solid red; */\n  padding: 80px 20px;\n\n  & > .heading {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    height: 20px;\n    align-items: center;\n    margin-bottom: 5rem;\n\n    h1 {\n      font-size: 5rem;\n      letter-spacing: 7px;\n      color: var(--very-light-gray);\n    }\n\n    img {\n      cursor: pointer;\n    }\n  }\n\n  & > .input {\n    width: 100%;\n    height: 50px;\n    background-color: ${({ theme }) => theme.todolistBackground};\n    border-radius: 5px;\n    border: none;\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n\n    div {\n      height: 25px;\n      width: 25px;\n      border-radius: 50%;\n      border: ${({ theme }) => theme.border};\n    }\n\n    input {\n      width: 90%;\n      height: 100%;\n      background-color: transparent;\n      border: none;\n      outline: none;\n      font-size: 2rem;\n      margin: 0 10px;\n      color: ${({ theme }) => theme.textColor};\n    }\n\n    img {\n      height: 100%;\n      cursor: pointer;\n    }\n  }\n\n  & > .main {\n    border-radius: 5px;\n\n    .items {\n      display: flex;\n      flex-direction: column;\n      border-radius: 5px 5px 0 0;\n      height: 49vh;\n      overflow-y: scroll;\n    }\n\n    .items::-webkit-scrollbar {\n      display: none;\n    }\n\n    .footer {\n      width: 100%;\n      height: 35px;\n      background-color: ${({ theme }) => theme.todolistBackground};\n      border-radius: 0 0px 5px 5px;\n      display: flex;\n      justify-content: space-between;\n      padding: 0 10px;\n      font-size: 1.3rem;\n      color: ${({ theme }) => theme.textCutColor};\n      align-items: center;\n\n      span {\n        cursor: pointer;\n      }\n\n      span:hover {\n        color: ${({ theme }) => theme.textColor};\n      }\n\n      .tags {\n        display: flex;\n        justify-content: space-between;\n        flex: 0.6;\n\n        @media (max-width: 786px) {\n          flex: 0.8;\n        }\n\n        span {\n          cursor: pointer;\n          text-decoration: none;\n          color: ${({ theme }) => theme.textCutColor};\n        }\n\n        span:hover {\n          color: ${({ theme }) => theme.textColor};\n        }\n\n        span.activeTag {\n          color: blue;\n        }\n      }\n    }\n  }\n`;\n","const reducer = (state = { all: [], active: [], completed: [] }, action) => {\n  // console.log(state.all);\n\n  switch (action.type) {\n    case \"ADD_WORK\":\n      return {\n        ...state,\n        all: [...state.all, action.payload],\n        active: [...state.active, action.payload],\n      };\n\n    case \"WORK_COMPLETE\":\n      let work = state.all.map((x) => {\n        if (x.id === action.payload) {\n          x.completed = !x.completed;\n        }\n        return x;\n      });\n\n      return {\n        ...state,\n        all: work,\n        active: state.all.filter((x) => x.completed === false),\n        completed: state.all.filter((x) => x.completed === true),\n      };\n\n    case \"CLEAR_COMPLETED\": {\n      return {\n        ...state,\n        all: state.all.filter((x) => x.completed === false),\n        completed: [],\n      };\n    }\n\n    case \"REMOVE_WORK\":\n      return {\n        ...state,\n        all: state.all.filter((x) => x.id !== action.payload),\n        active: state.active.filter((x) => x.id !== action.payload),\n        completed: state.completed.filter((x) => x.id !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport reducer from \"./reducers/todoReducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst allFromStorage = localStorage.getItem(\"all\")\n  ? JSON.parse(localStorage.getItem(\"all\"))\n  : [];\nconst activeFromStorage = localStorage.getItem(\"active\")\n  ? JSON.parse(localStorage.getItem(\"active\"))\n  : [];\nconst completedFromStorage = localStorage.getItem(\"completed\")\n  ? JSON.parse(localStorage.getItem(\"completed\"))\n  : [];\n\nconst middleware = [thunk];\n\nconst initialState = {\n  all: allFromStorage,\n  active: activeFromStorage,\n  completed: completedFromStorage,\n};\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}